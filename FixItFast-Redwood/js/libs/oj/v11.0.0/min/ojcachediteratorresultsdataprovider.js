/**
 * @license
 * Copyright (c) 2014, 2021, Oracle and/or its affiliates.
 * Licensed under The Universal Permissive License (UPL), Version 1.0
 * as shown at https://oss.oracle.com/licenses/upl/
 * @ignore
 */
define(["ojs/ojcore-base","ojs/ojeventtarget","ojs/ojcomponentcore"],function(t,e,s){"use strict";t=t&&Object.prototype.hasOwnProperty.call(t,"default")?t.default:t;
/**
     * @license
     * Copyright (c) 2014, 2021, Oracle and/or its affiliates.
     * Licensed under The Universal Permissive License (UPL), Version 1.0
     * @ignore
     */
/**
     * @preserve Copyright 2013 jQuery Foundation and other contributors
     * Released under the MIT license.
     * http://jquery.org/license
     */
class a{constructor(e){this.dataProvider=e,this.CacheAsyncIterable=class{constructor(t,e,s){this._parent=t,this.dataProviderAsyncIterator=e,this.cache=s,this[Symbol.asyncIterator]=()=>new this._parent.CacheAsyncIterator(this._parent,this.dataProviderAsyncIterator,this.cache)}},this.CacheAsyncIterator=class{constructor(t,e,s){this._parent=t,this.asyncIterator=e,this.cache=s,this._cachedOffset=0,this._iteratedOffset=0}next(){const t=this._parent._lastFetchParams,e=t.size?t.size:-1;let s;if(-1===e){if(this.cache.isDone())return s=this.cache.getDataList(t,this._cachedOffset),this._cachedOffset=this._cachedOffset+s.data.length,Promise.resolve(new this._parent.CacheAsyncIteratorReturnResult(s))}else{if(this.cache.getSize()>=this._cachedOffset+e||this.cache.isDone())return s=this.cache.getDataList(t,this._cachedOffset),this._cachedOffset=this._cachedOffset+s.data.length,this._cachedOffset<this.cache.getSize()||!this.cache.isDone()?Promise.resolve(new this._parent.CacheAsyncIteratorYieldResult(s)):Promise.resolve(new this._parent.CacheAsyncIteratorReturnResult(s));if(this._cachedOffset>0)return new Promise((t,e)=>{if(this._iteratedOffset<this._cachedOffset){const e=()=>this.asyncIterator.next().then(s=>{if(this._iteratedOffset=this._iteratedOffset+s.value.data.length,!(this._iteratedOffset>=this._cachedOffset||s.done))return e();t()});return e()}t()}).then(()=>this.asyncIterator.next().then(t=>(this._iteratedOffset=this._iteratedOffset+t.value.data.length,this._cachedOffset=this._iteratedOffset,this.cache.addListResult(t),t.done?new this._parent.CacheAsyncIteratorReturnResult(t.value):new this._parent.CacheAsyncIteratorYieldResult(t.value))))}return this.asyncIterator.next().then(t=>(this._iteratedOffset=this._iteratedOffset+t.value.data.length,this._cachedOffset=this._iteratedOffset,this.cache.addListResult(t),-1!==e||this.cache.isDone()||this.asyncIterator.next().then(t=>{this.cache.addListResult(t)}),t.done?new this._parent.CacheAsyncIteratorReturnResult(t.value):new this._parent.CacheAsyncIteratorYieldResult(t.value)))}},this.CacheAsyncIteratorYieldResult=class{constructor(t){this.value=t,this[a._VALUE]=t,this[a._DONE]=!1}},this.CacheAsyncIteratorReturnResult=class{constructor(t){this.value=t,this[a._VALUE]=t,this[a._DONE]=!0}},this.cache=new t.DataCache,this._lastFetchParams=null,e.createOptimizedKeyMap&&(this.createOptimizedKeyMap=t=>e.createOptimizedKeyMap(t)),e.createOptimizedKeySet&&(this.createOptimizedKeySet=t=>e.createOptimizedKeySet(t)),e.addEventListener(a._MUTATE,t=>{this.cache.processMutations(t.detail),this.dispatchEvent(t)}),e.addEventListener(a._REFRESH,t=>{this.cache.reset(),this.dispatchEvent(t)})}containsKeys(t){const e=new Set,s=new Set,a=this.cache.getDataByKeys(t);if(t.keys.forEach(t=>{a.results.get(t)?e.add(t):s.add(t)}),0===s.size)return Promise.resolve({containsParameters:t,results:e});{const a={attributes:t.attributes,keys:s,scope:t.scope};return this.dataProvider.containsKeys(a).then(s=>(s.results.forEach(t=>{e.add(t)}),{containsParameters:t,results:e}))}}fetchByKeys(t){const e=new Map,s=new Set,a=this.cache.getDataByKeys(t);if(t.keys.forEach(t=>{const r=a.results.get(t);r?e.set(t,r):s.add(t)}),0===s.size)return Promise.resolve({fetchParameters:t,results:e});{const a={attributes:t.attributes,keys:s,scope:t.scope};return this.dataProvider.fetchByKeys(a).then(s=>(s.results.forEach((t,s)=>{e.set(s,t)}),{fetchParameters:t,results:e}))}}fetchByOffset(t){const e=t.size?t.size:a._DEFAULT_SIZE;if(this._compareLastFetchParameters(t)&&t.offset+e<=this.cache.getSize()){const s=JSON.parse(JSON.stringify(t));s.size=e;const a=this.cache.getDataByOffset(s);if(a)return Promise.resolve(a)}return this.dataProvider.fetchByOffset(t)}fetchFirst(t){this._compareLastFetchParameters(t)||this.cache.reset(),this._storeLastFetchParams(t);const e=this.dataProvider.fetchFirst(t);return new this.CacheAsyncIterable(this,e[Symbol.asyncIterator](),this.cache)}getCapability(t){const e=this.dataProvider.getCapability(t);return"fetchCapability"===t?{attributeFilter:null==e?void 0:e.attributeFilter,caching:"visitedByCurrentIterator"}:e}getTotalSize(){return null!=this._lastFetchParams&&!this._lastFetchParams.filterDef&&this.cache.isDone()?Promise.resolve(this.cache.getSize()):this.dataProvider.getTotalSize()}isEmpty(){return null!=this._lastFetchParams&&!this._lastFetchParams.filterDef&&this.cache.isDone()?0===this.cache.getSize()?"yes":"no":this.dataProvider.isEmpty()}_compareLastFetchParameters(e){return e=e||{},null!=this._lastFetchParams&&t.Object.compareValues(this._lastFetchParams.attributes,e.attributes||null)&&t.Object.compareValues(this._lastFetchParams.filterDef,this._getFilterDef(e.filterCriterion))&&t.Object.compareValues(this._lastFetchParams.sortCriteria,e.sortCriteria||null)}_storeLastFetchParams(t){t=t||{},this._lastFetchParams={},this._lastFetchParams.size=t.size,this._lastFetchParams.attributes=t.attributes?JSON.parse(JSON.stringify(t.attributes)):null,this._lastFetchParams.filterDef=this._getFilterDef(t.filterCriterion),this._lastFetchParams.sortCriteria=t.sortCriteria?JSON.parse(JSON.stringify(t.sortCriteria)):null}_getFilterDef(t){if(!t)return null;const e={};return Object.keys(t).forEach(s=>{"filter"!==s&&(e[s]=t[s])}),e}}return a._KEY="key",a._KEYS="keys",a._DATA="data",a._STARTINDEX="startIndex",a._SORT="sort",a._SORTCRITERIA="sortCriteria",a._FILTERCRITERION="filterCriterion",a._METADATA="metadata",a._ITEMS="items",a._FROM="from",a._OFFSET="offset",a._REFRESH="refresh",a._MUTATE="mutate",a._SIZE="size",a._FETCHPARAMETERS="fetchParameters",a._VALUE="value",a._DONE="done",a._RESULTS="results",a._CONTAINSPARAMETERS="containsParameters",a._DEFAULT_SIZE=25,a._CONTAINSKEYS="containsKeys",a._FETCHBYKEYS="fetchByKeys",a._FETCHBYOFFSET="fetchByOffset",a._FETCHFIRST="fetchFirst",a._ADDEVENTLISTENER="addEventListener",a._FETCHATTRIBUTES="attributes",e.EventTargetMixin.applyMixin(a),t._registerLegacyNamespaceProp("CachedIteratorResultsDataProvider",a),a});
//# sourceMappingURL=ojcachediteratorresultsdataprovider.js.map