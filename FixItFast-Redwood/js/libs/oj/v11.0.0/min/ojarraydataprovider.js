/**
 * @license
 * Copyright (c) 2014, 2021, Oracle and/or its affiliates.
 * Licensed under The Universal Permissive License (UPL), Version 1.0
 * as shown at https://oss.oracle.com/licenses/upl/
 * @ignore
 */
define(["ojs/ojcore-base","ojs/ojmap","ojs/ojset","ojs/ojdataprovider","ojs/ojeventtarget","ojs/ojlogger"],function(t,e,s,i,n,a){"use strict";t=t&&Object.prototype.hasOwnProperty.call(t,"default")?t.default:t,e=e&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e,s=s&&Object.prototype.hasOwnProperty.call(s,"default")?s.default:s;
/**
     * @preserve Copyright 2013 jQuery Foundation and other contributors
     * Released under the MIT license.
     * http://jquery.org/license
     */
class r{constructor(t,e){this.data=t,this.options=e,this.Item=class{constructor(t,e){this.metadata=t,this.data=e,this[r._METADATA]=t,this[r._DATA]=e}},this.ItemMetadata=class{constructor(t){this.key=t,this[r._KEY]=t}},this.FetchByKeysResults=class{constructor(t,e){this.fetchParameters=t,this.results=e,this[r._FETCHPARAMETERS]=t,this[r._RESULTS]=e}},this.ContainsKeysResults=class{constructor(t,e){this.containsParameters=t,this.results=e,this[r._CONTAINSPARAMETERS]=t,this[r._RESULTS]=e}},this.FetchByOffsetResults=class{constructor(t,e,s){this.fetchParameters=t,this.results=e,this.done=s,this[r._FETCHPARAMETERS]=t,this[r._RESULTS]=e,this[r._DONE]=s}},this.FetchListParameters=class{constructor(t,e,s,i){this.size=t,this.sortCriteria=e,this.filterCriterion=s,this.attributes=i,this[r._SIZE]=t,this[r._SORTCRITERIA]=e,this[r._FILTERCRITERION]=s,this[r._ATTRIBUTES]=i}},this.FetchListResult=class{constructor(t,e,s){this.fetchParameters=t,this.data=e,this.metadata=s,this[r._FETCHPARAMETERS]=t,this[r._DATA]=e,this[r._METADATA]=s}},this.AsyncIterable=class{constructor(t){this._asyncIterator=t,this[Symbol.asyncIterator]=()=>this._asyncIterator}},this.AsyncIterator=class{constructor(t,e,s,i){this._parent=t,this._nextFunc=e,this._params=s,this._offset=i,this._clientId=s&&s.clientId||Symbol(),t._mapClientIdToOffset.set(this._clientId,i),this._cacheObj={},this._cacheObj[r._MUTATIONSEQUENCENUM]=t._mutationSequenceNum}next(){const t=this._parent._mapClientIdToOffset.get(this._clientId),e=this._nextFunc(this._params,t,!1,this._cacheObj);return this._parent._mapClientIdToOffset.set(this._clientId,e.offset),Promise.resolve(e.result)}},this.AsyncIteratorYieldResult=class{constructor(t){this.value=t,this[r._VALUE]=t,this[r._DONE]=!1}},this.AsyncIteratorReturnResult=class{constructor(t){this.value=t,this[r._VALUE]=t,this[r._DONE]=!0}},this.DataProviderMutationEventDetail=class{constructor(t,e,s,i){this._parent=t,this.add=e,this.remove=s,this.update=i,this[r._ADD]=e,this[r._REMOVE]=s,this[r._UPDATE]=i,Object.defineProperty(this,r._PARENT,{value:t,enumerable:!1})}},this.DataProviderOperationEventDetail=class{constructor(t,e,s,i,n){this._parent=t,this.keys=e,this.metadata=s,this.data=i,this.indexes=n,this[r._KEYS]=e,this[r._METADATA]=s,this[r._DATA]=i,this[r._INDEXES]=n,Object.defineProperty(this,r._PARENT,{value:t,enumerable:!1})}},this.DataProviderAddOperationEventDetail=class{constructor(t,e,s,i,n,a,l){this._parent=t,this.keys=e,this.afterKeys=s,this.addBeforeKeys=i,this.metadata=n,this.data=a,this.indexes=l,this[r._KEYS]=e,this[r._AFTERKEYS]=s,this[r._ADDBEFOREKEYS]=i,this[r._METADATA]=n,this[r._DATA]=a,this[r._INDEXES]=l,Object.defineProperty(this,r._PARENT,{value:t,enumerable:!1})}},this._sequenceNum=0,this._mutationSequenceNum=0,this._mapClientIdToOffset=new Map,this._subscribeObservableArray(t),null!=e&&null!=e[r._KEYS]&&(this._keysSpecified=!0,this._keys=e[r._KEYS])}containsKeys(t){return this.fetchByKeys(t).then(e=>{const i=new s;return t[r._KEYS].forEach(t=>{null!=e[r._RESULTS].get(t)&&i.add(t)}),Promise.resolve(new this.ContainsKeysResults(t,i))})}fetchByKeys(s){this._generateKeysIfNeeded();const i=new e,n=this._getKeys(),a=null!=s?s[r._ATTRIBUTES]:null;let l,o=0;if(s){const e=this._getRowData();return s[r._KEYS].forEach(s=>{for(l=null,o=0;o<n.length;o++)if(t.Object.compareValues(n[o],s)){l=o;break}if(null!=l&&l>=0){let t=e[l];if(a&&a.length>0){const e={};this._filterRowAttributes(a,t,e),t=e}i.set(s,new this.Item(new this.ItemMetadata(s),t))}}),Promise.resolve(new this.FetchByKeysResults(s,i))}return Promise.reject("Keys are a required parameter")}fetchByOffset(t){const e=null!=t?t[r._SIZE]:-1,s=null!=t?t[r._SORTCRITERIA]:null,i=null!=t&&t[r._OFFSET]>0?t[r._OFFSET]:0,n=null!=t?t[r._ATTRIBUTES]:null,a=null!=t?t[r._FILTERCRITERION]:null;this._generateKeysIfNeeded();let l=[],o=!0;if(t){const h=new this.FetchListParameters(e,s,a,n),u=this._fetchFrom(h,i,!0).result;h[r._SORTCRITERIA]&&(t[r._SORTCRITERIA]=h[r._SORTCRITERIA]);const _=u[r._VALUE];o=u[r._DONE];const c=_[r._DATA],d=_[r._METADATA].map(t=>t[r._KEY]);return l=c.map((t,e)=>new this.Item(new this.ItemMetadata(d[e]),t)),Promise.resolve(new this.FetchByOffsetResults(t,l,o))}return Promise.reject("Offset is a required parameter")}fetchFirst(t){return new this.AsyncIterable(new this.AsyncIterator(this,this._fetchFrom.bind(this),t,0))}getCapability(t){return r.getCapability(t)}static _getFetchCapability(){const t=new Set;return t.add("exclusion"),{caching:"all",attributeFilter:{expansion:{},ordering:{},defaultShape:{features:t}}}}static getCapability(t){return"sort"===t?{attributes:"multiple"}:"fetchByKeys"===t?Object.assign({implementation:"lookup"},r._getFetchCapability()):"fetchByOffset"===t?Object.assign({implementation:"randomAccess"},r._getFetchCapability()):"fetchFirst"===t?Object.assign({iterationSpeed:"immediate"},r._getFetchCapability()):"fetchCapability"===t?r._getFetchCapability():"filter"===t?{operators:["$co","$eq","$ew","$pr","$gt","$ge","$lt","$le","$ne","$regex","$sw"],attributeExpression:["*"],textFilter:{}}:null}getTotalSize(){return Promise.resolve(this._getRowData().length)}isEmpty(){return this._getRowData().length>0?"no":"yes"}createOptimizedKeySet(t){return new s(t)}createOptimizedKeyMap(t){if(t){const s=new e;return t.forEach((t,e)=>{s.set(e,t)}),s}return new e}_getRowData(){return this[r._DATA]instanceof Array?this[r._DATA]:this[r._DATA]()}_getKeys(){return null==this._keys||this._keys instanceof Array?this._keys:this._keys()}_indexOfKey(e){const s=this._getKeys();let i,n=-1;for(i=0;i<s.length;i++)if(t.Object.compareValues(s[i],e)){n=i;break}return n}_adjustIteratorOffset(t,e){this._mapClientIdToOffset.forEach((s,i)=>{let n=0;t&&t.forEach(t=>{t<s&&++n}),s-=n,e&&e.forEach(t=>{t<s&&++s}),this._mapClientIdToOffset.set(i,s)})}_subscribeObservableArray(e){if(!(e instanceof Array)){if(!this._isObservableArray(e))throw new Error("Invalid data type. ArrayDataProvider only supports Array or observableArray.");e.subscribe(e=>{let i,n,r,l,o,h=[],u=[],_=[],c=[];const d=[];this._mutationSequenceNum++;let f=!0,E=!0;e.forEach(t=>{"deleted"===t.status?(f=!1):"added"===t.status&&(E=!1)});const T=[],A=[];let p=null,m=null,y=null;const R=this._generateKeysIfNeeded();if(!f&&!E){for(i=0;i<e.length;i++){l=e[i].index,o=e[i].status;const s=this._getId(e[i].value);for(n=0;n<e.length;n++)n!==i&&l===e[n].index&&o!==e[n].status&&T.indexOf(i)<0&&A.indexOf(i)<0&&(null==s||t.Object.compareValues(s,this._getId(e[n].value)))&&("deleted"===o?(A.push(i),T.push(n)):(A.push(n),T.push(i)))}for(i=0;i<e.length;i++)if(T.indexOf(i)>=0){const t=this._getKeys()[e[i].index];u.push(t),h.push(e[i].value),_.push(e[i].index)}if(u.length>0){c=u.map(t=>new this.ItemMetadata(t));const t=new s;u.forEach(e=>{t.add(e)}),p=new this.DataProviderOperationEventDetail(this,t,c,h,_)}}if(h=[],u=[],_=[],!f){for(i=0;i<e.length;i++)"deleted"===e[i].status&&T.indexOf(i)<0&&A.indexOf(i)<0&&(r=this._getId(e[i].value),null==r&&(r=R?e[i].index:this._getKeys()[e[i].index]),u.push(r),h.push(e[i].value),_.push(e[i].index));if(u.length>0&&u.forEach(t=>{const e=this._indexOfKey(t);e>=0&&this._keys.splice(e,1)}),u.length>0){c=u.map(t=>new this.ItemMetadata(t));const t=new s;u.forEach(e=>{t.add(e)}),y=new this.DataProviderOperationEventDetail(this,t,c,h,_)}}if(h=[],u=[],_=[],!E){const t=null==this._getKeys()||!(this._getKeys().length>0);for(i=0;i<e.length;i++)"added"===e[i].status&&T.indexOf(i)<0&&A.indexOf(i)<0&&(r=this._getId(e[i].value),null==r&&(R||this._keysSpecified)&&(r=this._getKeys()[e[i].index]),null==r?(r=this._sequenceNum,this._sequenceNum++,this._keys.splice(e[i].index,0,r)):t||-1===this._indexOfKey(r)?this._keys.splice(e[i].index,0,r):R||this._keysSpecified||(a.warn("added row has duplicate key "+r),this._keys.splice(e[i].index,0,r)),u.push(r),h.push(e[i].value),_.push(e[i].index));for(i=0;i<e.length;i++)if("added"===e[i].status&&T.indexOf(i)<0&&A.indexOf(i)<0){let t=this._getKeys()[e[i].index+1];t=null==t?null:t,d.push(t)}if(u.length>0){c=u.map(t=>new this.ItemMetadata(t));const t=new s;u.forEach(e=>{t.add(e)});const e=new s;d.forEach(t=>{e.add(t)}),m=new this.DataProviderAddOperationEventDetail(this,t,e,d,c,h,_)}}this._fireMutationEvent(m,y,p)},null,"arrayChange"),e.subscribe(t=>{var e,s,n,a;if(this._mutationEvent){const t=this._mutationEvent.detail;this._adjustIteratorOffset(null===(e=t.remove)||void 0===e?void 0:e.indexes,null===(s=t.add)||void 0===s?void 0:s.indexes),this.dispatchEvent(this._mutationEvent)}else if(this._mutationRemoveEvent||this._mutationAddEvent||this._mutationUpdateEvent){if(this._mutationRemoveEvent){const t=this._mutationRemoveEvent.detail;this._adjustIteratorOffset(null===(n=t.remove)||void 0===n?void 0:n.indexes,null),this.dispatchEvent(this._mutationRemoveEvent)}if(this._mutationAddEvent){const t=this._mutationAddEvent.detail;this._adjustIteratorOffset(null,null===(a=t.add)||void 0===a?void 0:a.indexes),this.dispatchEvent(this._mutationAddEvent)}this._mutationUpdateEvent&&this.dispatchEvent(this._mutationUpdateEvent)}else this.dispatchEvent(new i.DataProviderRefreshEvent);this._mutationEvent=null,this._mutationRemoveEvent=null,this._mutationAddEvent=null,this._mutationUpdateEvent=null},null,"change")}}_fireMutationEvent(t,e,s){const n=new this.DataProviderMutationEventDetail(this,t,e,s);this._mutationEvent=new i.DataProviderMutationEvent(n)}_hasSamePropValue(e,s,i){const n="_hasSamePropValue is true";try{e&&e[i]&&e[i].forEach(e=>{s&&s[i]&&s[i].forEach(s=>{if(t.Object.compareValues(e,s))throw n})})}catch(t){if(t===n)return!0;throw t}return!1}_isObservableArray(t){return"function"==typeof t&&t.subscribe&&!(void 0===t.destroyAll)}_generateKeysIfNeeded(){if(null==this._keys){const t=null!=this.options?this.options[r._KEYATTRIBUTES]||this.options[r._IDATTRIBUTE]:null;this._keys=[];const e=this._getRowData();let s,i=0;for(i=0;i<e.length;i++)s=this._getId(e[i]),null!=s&&"@index"!==t||(s=this._sequenceNum,this._sequenceNum++),this._keys[i]=s;return!0}return!1}_getId(t){let e,s=null;if(null!=this.options&&(null!=this.options[r._KEYATTRIBUTES]?s=this.options[r._KEYATTRIBUTES]:null!=this.options[r._IDATTRIBUTE]&&(s=this.options[r._IDATTRIBUTE])),null!=s){if(Array.isArray(s)){let i;for(e=[],i=0;i<s.length;i++)e[i]=this._getVal(t,s[i])}else e="@value"===s?this._getAllVals(t):this._getVal(t,s);return e}return null}_getVal(t,e){if("string"==typeof e){const s=e.indexOf(".");if(s>0){const i=e.substring(0,s),n=e.substring(s+1),a=t[i];if(a)return this._getVal(a,n)}}return"function"==typeof t[e]?t[e]():t[e]}_getAllVals(t){return Object.keys(t).map(e=>this._getVal(t,e))}_fetchFrom(t,e,s,n){const a=null!=t?t[r._ATTRIBUTES]:null;this._generateKeysIfNeeded();const l=null!=t?t[r._SORTCRITERIA]:null,o=this._getCachedIndexMap(l,n),h=this._getRowData(),u=o.map(t=>h[t]),_=o.map(t=>this._getKeys()[t]),c=null!=t?t[r._SIZE]>0?t[r._SIZE]:t[r._SIZE]<0?this._getKeys().length:25:25;let d=e+c<u.length;const f=this._mergeSortCriteria(l);null!=f&&((t=t||{})[r._SORTCRITERIA]=f);let E,T=[],A=[],p=0;if(null!=t&&t[r._FILTERCRITERION]){let s=null;s=i.FilterFactory.getFilter({filterDef:t[r._FILTERCRITERION],filterOptions:this.options});let n=0;for(;T.length<c&&n<u.length;)s.filter(u[n])&&(p>=e&&(T.push(u[n]),A.push(_[n])),p++),n++;d=n<u.length}else T=u.slice(e,e+c),A=_.slice(e,e+c);p=e+T.length,E=T.map(t=>{if(a&&a.length>0){const e={};this._filterRowAttributes(a,t,e),t=e}return t});const m=A.map(t=>new this.ItemMetadata(t));let y=new this.FetchListResult(t,E,m);return(s?d:y.data.length>0)?{result:new this.AsyncIteratorYieldResult(y),offset:p}:{result:new this.AsyncIteratorReturnResult(y),offset:p}}_getCachedIndexMap(t,e){if(e&&e.indexMap&&e[r._MUTATIONSEQUENCENUM]===this._mutationSequenceNum)return e.indexMap;const s=this._getRowData().map((t,e)=>e),i=this._sortData(s,t);return e&&(e.indexMap=i,e[r._MUTATIONSEQUENCENUM]=this._mutationSequenceNum),i}_sortData(t,e){const s=this._getRowData(),i=t.map(t=>({index:t,value:s[t]}));return null!=e&&i.sort(this._getSortComparator(e)),i.map(t=>t.index)}_getSortComparator(t){return(e,s)=>{const i=null!=this.options?this.options[r._SORTCOMPARATORS]:null;let n,a,l,o,h,u;for(n=0;n<t.length;n++)if(a=t[n][r._DIRECTION],l=t[n][r._ATTRIBUTE],o=null,null!=i&&(o=i[r._COMPARATORS].get(l)),h=this._getVal(e.value,l),u=this._getVal(s.value,l),null!=o){const t="descending"===a?-1:1,e=o(h,u)*t;if(0!==e)return e}else{let t=0;const e="string"==typeof h?h:h.toString(),s="string"==typeof u?u:u.toString();if(t="ascending"===a?e.localeCompare(s,void 0,{numeric:!0,sensitivity:"base"}):s.localeCompare(e,void 0,{numeric:!0,sensitivity:"base"}),0!==t)return t}return 0}}_mergeSortCriteria(t){const e=null!=this.options?this.options[r._IMPLICITSORT]:null;if(null!=e){if(null==t)return e;const s=t.slice(0);let i,n,a;for(i=0;i<e.length;i++){for(a=!1,n=0;n<s.length;n++)s[n][r._ATTRIBUTE]===e[i][r._ATTRIBUTE]&&(a=!0);a||s.push(e[i])}return s}return t}_filterRowAttributes(t,e,s){if(Array.isArray(t)){let i,n=!1;t.forEach(t=>{t!==r._ATDEFAULT&&t.name!==r._ATDEFAULT||(n=!0)}),Object.keys(e).forEach(a=>{if(n){let n,r=!1,l=a;for(i=0;i<t.length;i++)if(n=t[i]instanceof Object?t[i].name:t[i],n.startsWith("!")){if(n=n.substr(1,n.length-1),n===a){r=!0;break}}else if(n===a){l=t[i];break}r||this._filterRowAttributes(l,e,s)}else t.forEach(t=>{let i;i=t instanceof Object?t.name:t,i.startsWith("!")||i!==a||this._filterRowAttributes(t,e,s)})})}else if(t instanceof Object){const i=t.name,n=t.attributes;if(i&&!i.startsWith("!"))if(e[i]instanceof Object&&!Array.isArray(e[i])&&n){const t={};this._filterRowAttributes(n,e[i],t),s[i]=t}else if(Array.isArray(e[i])&&n){let t;s[i]=[],e[i].forEach((e,a)=>{t={},this._filterRowAttributes(n,e,t),s[i][a]=t})}else this._proxyAttribute(s,e,i)}else this._proxyAttribute(s,e,t)}_proxyAttribute(t,e,s){t&&e&&Object.defineProperty(t,s,{get:()=>e[s],set(t){e[s]=t},enumerable:!0})}}return r._KEY="key",r._KEYS="keys",r._AFTERKEYS="afterKeys",r._ADDBEFOREKEYS="addBeforeKeys",r._DIRECTION="direction",r._ATTRIBUTE="attribute",r._ATTRIBUTES="attributes",r._SORT="sort",r._SORTCRITERIA="sortCriteria",r._FILTERCRITERION="filterCriterion",r._DATA="data",r._METADATA="metadata",r._INDEXES="indexes",r._OFFSET="offset",r._SIZE="size",r._IDATTRIBUTE="idAttribute",r._IMPLICITSORT="implicitSort",r._KEYATTRIBUTES="keyAttributes",r._SORTCOMPARATORS="sortComparators",r._COMPARATORS="comparators",r._COMPARATOR="comparator",r._RESULTS="results",r._CONTAINS="contains",r._FETCHPARAMETERS="fetchParameters",r._CONTAINSPARAMETERS="containsParameters",r._VALUE="value",r._DONE="done",r._ADD="add",r._REMOVE="remove",r._UPDATE="update",r._DETAIL="detail",r._FETCHLISTRESULT="fetchListResult",r._ATDEFAULT="@default",r._MUTATIONSEQUENCENUM="mutationSequenceNum",r._PARENT="_parent",n.EventTargetMixin.applyMixin(r),t._registerLegacyNamespaceProp("ArrayDataProvider",r),r});
//# sourceMappingURL=ojarraydataprovider.js.map