/**
 * @license
 * Copyright (c) 2014, 2021, Oracle and/or its affiliates.
 * Licensed under The Universal Permissive License (UPL), Version 1.0
 * as shown at https://oss.oracle.com/licenses/upl/
 * @ignore
 */
define(["ojs/ojcore-base","jquery","ojs/ojarraydataprovider","ojs/ojeventtarget"],function(e,t,r,s){"use strict";e=e&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e,t=t&&Object.prototype.hasOwnProperty.call(t,"default")?t.default:t,r=r&&Object.prototype.hasOwnProperty.call(r,"default")?r.default:r;
/**
     * @preserve Copyright 2013 jQuery Foundation and other contributors
     * Released under the MIT license.
     * http://jquery.org/license
     */
class a{constructor(e,t,s){this.treeData=e,this.options=t,this._rootDataProvider=s,this.TreeAsyncIterator=class{constructor(e,t){this._parent=e,this._baseIterable=t}next(){return this._baseIterable[Symbol.asyncIterator]().next().then(e=>{const t=e.value.metadata;for(let r=0;r<t.length;r++)t[r]=this._parent._getTreeMetadata(t[r],e.value.data[r]);return e})}},this.TreeAsyncIterable=class{constructor(e,t){this._parent=e,this._asyncIterator=t,this[Symbol.asyncIterator]=()=>this._asyncIterator}},this._baseDataProvider=new r(e,t),this._mapKeyToNode=new Map,this._mapNodeToKey=new Map,this._mapArrayToSequenceNum=new Map,this._mapKoArrayToSubscriptions=new Map,this._mapKeyToParentNodePath=new Map,null==s&&(this._parentNodePath=[],this._processTreeArray(e,[]))}containsKeys(e){return this.fetchByKeys(e).then(t=>{const r=new Set;return e.keys.forEach(e=>{null!=t.results.get(e)&&r.add(e)}),Promise.resolve({containsParameters:e,results:r})})}getCapability(e){return this._baseDataProvider.getCapability(e)}getTotalSize(){return this._baseDataProvider.getTotalSize()}isEmpty(){return this._baseDataProvider.isEmpty()}createOptimizedKeySet(e){return this._baseDataProvider.createOptimizedKeySet(e)}createOptimizedKeyMap(e){return this._baseDataProvider.createOptimizedKeyMap(e)}getChildDataProvider(e,t){const r=this._getNodeForKey(e);if(r){const t=this._getChildren(r);if(t){const r=new a(t,this.options,this._getRootDataProvider());if(null!=r){const t=this._getRootDataProvider();r._parentNodePath=t._mapKeyToParentNodePath.get(JSON.stringify(e))}return r}}return null}fetchFirst(e){e=this._applyLeafNodeFilter(e);const t=this._baseDataProvider.fetchFirst(e);return new this.TreeAsyncIterable(this,new this.TreeAsyncIterator(this,t))}fetchByOffset(e){e=this._applyLeafNodeFilter(e);return this._baseDataProvider.fetchByOffset(e).then(e=>{const t=e.results,r=[];for(const e of t){let t=e.metadata;const s=e.data;t=this._getTreeMetadata(t,s),r.push({data:s,metadata:t})}return{done:e.done,fetchParameters:e.fetchParameters,results:r}})}fetchByKeys(e){const t=new Map;return e.keys.forEach(e=>{const r=this._getNodeForKey(e);r&&t.set(e,{metadata:{key:e},data:r})}),Promise.resolve({fetchParameters:e,results:t})}_getChildren(e){const t=this.options&&this.options.childrenAttribute?this.options.childrenAttribute:"children";return this._getVal(e,t,!0)}_getRootDataProvider(){return this._rootDataProvider?this._rootDataProvider:this}_subscribeObservableArray(t,r){if("function"!=typeof t||!t.subscribe||void 0===t.destroyAll)throw new Error("Invalid data type. ArrayTreeDataProvider only supports Array or observableArray.");let s=null;const a=new Array(2);a[0]=t.subscribe(a=>{let i,o,n,h=[],l=[],d=[],u=[];const c=[];let y=null,p=null,_=null;const f=[];for(i=0;i<a.length;i++){n=a[i].index,status=a[i].status;const t=this._getId(a[i].value);if(t)for(o=0;o<a.length;o++)if(o!==i&&n===a[o].index&&status!==a[o].status&&c.indexOf(i)<0&&f.indexOf(i)<0){const r=this._getId(a[o].value);e.Object.compareValues(t,r)&&("deleted"===status?(f.push(i),c.push(o),this._releaseNode(a[i].value)):(f.push(o),c.push(i)))}}for(i=0;i<a.length;i++)if("deleted"===a[i].status&&c.indexOf(i)<0&&f.indexOf(i)<0){const e=a[i].value,t=this._getKeyForNode(e);l.push(t),h.push(e),d.push(a[i].index),this._releaseNode(e)}if(l.length>0){u=l.map(e=>({key:e}));const e=new Set;l.forEach(t=>{e.add(t)}),_={data:h,indexes:d,keys:e,metadata:u}}h=[],l=[],d=[],u=[];const g=t(),b=[],v=[],m=[],A=[];for(i=0;i<a.length;i++)if("added"===a[i].status&&f.indexOf(i)<0){const e=a[i].value,s=this._processNode(e,r,t);c.indexOf(i)<0?(l.push(s.key),h.push(e),d.push(a[i].index),u.push({key:s.key})):(b.push(s.key),v.push(e),m.push(a[i].index),A.push({key:s.key}))}if(l.length>0){const e=new Set;l.forEach(t=>{e.add(t)});const t=new Set,s=[],a=[];let i;i=this.options&&this.options.keyAttributes&&"siblings"!==this.options.keyAttributesScope?r.length>0?r[r.length-1]:null:r.length>0?r:null,d.forEach(e=>{let r;r=e>=g.length-1?null:this._getKeyForNode(g[e+1]),t.add(r),s.push(r),a.push(i)}),p={afterKeys:t,addBeforeKeys:s,parentKeys:a,data:h,indexes:d,keys:e,metadata:u}}if(b.length>0){const e=new Set;b.forEach(t=>{e.add(t)}),y={data:v,indexes:m,keys:e,metadata:A}}s=new e.DataProviderMutationEvent({add:p,remove:_,update:y})},null,"arrayChange"),a[1]=t.subscribe(t=>{s?this.dispatchEvent(s):(this._flushMaps(),this._processTreeArray(this.treeData,[]),this.dispatchEvent(new e.DataProviderRefreshEvent)),s=null},null,"change"),this._mapKoArrayToSubscriptions.set(t,a)}_flushMaps(){const e=this._getRootDataProvider();e._mapKeyToNode.clear(),e._mapNodeToKey.clear(),e._mapArrayToSequenceNum.clear(),e._mapKoArrayToSubscriptions.forEach((e,t)=>{this._unsubscribeObservableArray(t)})}_unsubscribeObservableArray(e){if("function"==typeof e&&e.subscribe&&void 0!==e.destroyAll){const t=this._mapKoArrayToSubscriptions.get(e);t&&(t[0].dispose(),t[1].dispose(),this._mapKoArrayToSubscriptions.delete(e))}}_processTreeArray(e,t){let r;e instanceof Array?r=e:(this._subscribeObservableArray(e,t),r=e()),r.forEach((r,s)=>{this._processNode(r,t,e)})}_releaseTreeArray(e){let t;e instanceof Array?t=e:(this._unsubscribeObservableArray(e),t=e()),t.forEach((e,t)=>{this._releaseNode(e)})}_processNode(e,t,r){const s=this._createKeyObj(e,t,r);this._setMapEntry(s.key,e);this._getRootDataProvider()._mapKeyToParentNodePath.set(JSON.stringify(s.key),s.keyPath);const a=this._getChildren(e);return a&&this._processTreeArray(a,s.keyPath),s}_releaseNode(e){const t=this._getKeyForNode(e);this._deleteMapEntry(t,e);const r=this._getChildren(e);r&&this._releaseTreeArray(r)}_createKeyObj(e,t,r){let s=this._getId(e);const a=t?t.slice():[];return null==s?(this._setUseIndexAsKey(!0),a.push(this._incrementSequenceNum(r)),s=a):(a.push(s),this.options&&"siblings"===this.options.keyAttributesScope&&(s=a)),{key:s,keyPath:a}}_getId(e){let t;const r=null!=this.options?this.options.keyAttributes:null;if(null!=r){if(Array.isArray(r)){t=[];for(let s=0;s<r.length;s++)t[s]=this._getVal(e,r[s])}else t="@value"==r?this._getAllVals(e):this._getVal(e,r);return t}return null}_getVal(e,t,r){if("string"==typeof t){const r=t.indexOf(".");if(r>0){const s=t.substring(0,r),a=t.substring(r+1),i=e[s];if(i)return this._getVal(i,a)}}return!0!==r&&"function"==typeof e[t]?e[t]():e[t]}_getAllVals(e){return Object.keys(e).map(t=>this._getVal(e,t))}_getNodeMetadata(e){return{key:this._getKeyForNode(e)}}_getNodeForKey(e){return this._getRootDataProvider()._mapKeyToNode.get(JSON.stringify(e))}_getKeyForNode(e){return this._getRootDataProvider()._mapNodeToKey.get(e)}_setMapEntry(e,t){const r=this._getRootDataProvider();r._mapKeyToNode.set(JSON.stringify(e),t),r._mapNodeToKey.set(t,e)}_deleteMapEntry(e,t){const r=this._getRootDataProvider();r._mapKeyToNode.delete(JSON.stringify(e)),r._mapNodeToKey.delete(t)}_incrementSequenceNum(e){const t=this._getRootDataProvider(),r=t._mapArrayToSequenceNum.get(e)||0;return t._mapArrayToSequenceNum.set(e,r+1),r}_getUseIndexAsKey(){return this._getRootDataProvider()._useIndexAsKey}_setUseIndexAsKey(e){return this._getRootDataProvider()._useIndexAsKey=e}_getLeafNodeFilter(e){const t=e,r=this.options&&this.options.childrenAttribute?this.options.childrenAttribute:"children";return{op:"$or",criteria:[t,{op:"$and",criteria:[{op:"$ne",attribute:r,value:null},{op:"$ne",attribute:r,value:void 0}]}]}}_applyLeafNodeFilter(e){if(e&&e.filterCriterion){const r=t.extend({},e);r.filterCriterion=this._getLeafNodeFilter(r.filterCriterion),r.filterCriterion.filter=e.filterCriterion.filter,e=r}return e}_getTreeMetadata(e,t){let r=!1,s=e.key;return(null==this.options||null==this.options.keyAttributes||"siblings"==this.options.keyAttributesScope||"@index"==this.options.keyAttributes||this._getUseIndexAsKey())&&(r=!0),r&&(s=this._parentNodePath?this._parentNodePath.slice():[],s.push(e.key)),e=this._getNodeMetadata(this._getNodeForKey(s))}}return s.EventTargetMixin.applyMixin(a),e._registerLegacyNamespaceProp("ArrayTreeDataProvider",a),a});
//# sourceMappingURL=ojarraytreedataprovider.js.map